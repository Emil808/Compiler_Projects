//declarations;
i$counter;
f$number;
i$negative;
i$power;

//functions

increment(i$a;)i{
	return $a + 1;
};


//main
main{
$number = 0.3;
$counter = 1;  
/*
While loop test
floating point number test in a while loop
number = 0.3
*/
while($counter < 10){
	printf('Count: %d\t', $counter); 
	if($counter < 5){
		$number = $number * 2.4; 
	}
	elseif($counter == 5){
		$number = 30.0; 
	}
	elseif($counter == 8){
		$number = 55.23434; 
	}
	else{
		$number = 0.4; 
	
	}
	
	$counter = $counter + 1; 
	printf('%f\n', $number); 
	
}

/*
Negitive number test
-1 -4 = -5
-5 * 8 = -40
*/
printf('\nnegitive numbers');
$negative = -1;
printf('%d\n', $negative);
$negative = $negative - 4;
printf('%d\n', $negative);
$negative = $negative * 8;
printf('%d\n', $negative);

/*
Do while loop
counts to 3
*/
printf('\nDo While Loop\n'); 
$counter = 0; 
do{
	printf('In loop, %d\n', $counter); 
	$counter = increment($counter); 
}
while ($counter < 3); 

/*
power test
3^2 = 9
*/
printf('\nPowers\n');
$power = 3;
$power = $power ^ 2;
printf('3^2 = %d\n',$power);

/*
division test
9/3 = 3
*/
printf('\nDiv\n');
$power = $power / 3;
printf('9/3 = %d\n',$power);

/*
Test of the bit manipulation
15 = 1111_1111_1111_1111
3 = 0011
1111 & 0011 = 0011
1111 | 0011 = 1111
1111 /& 0011 = 1100
1111 /| 0011 = 0000
*/
printf('\nBit Manipulation\n');
$power = 15;
$power = $power & 3;
printf('15 (0...0_1111) & 3 (0...0_0011) = [%d] = 3 (0...0_0011)\n',$power);
$power = 15;
$power = $power | 3;
printf('15 (0...0_1111) | 3 (0...0_0011) = [%d] = 15 (0...0_1111)\n',$power);
$power = 15;
$power = $power /& 3;
printf('15 (0...0_1111) /& 3 (0...0_0011) = [%d] = -4 (1...1_1100)\n',$power);
$power = 15;
$power = $power /| 3;
printf('15 (0...0_1111) /| 3 (0...0_0011) = [%d] = -16 (1...1_0000)\n',$power);
/*
$power = 7;
$power = $power /~ $power;
printf('15/~3 = %d\n',$power);
*/

/*
Bit shifting test
8 == 1000
8<<2 = 10_0000
10_0000 = 32
*/
printf('\nBit shifting\n');
$power = 8;
$power = $power << 2;
printf('8<<2 = %d\n',$power);

/*
Test of the modulus operation
9%3 should result in 0
*/
printf('\nMod\n');
$power = 9;
$power = $power % 2;
printf('9%%2 = %d\n',$power);
}